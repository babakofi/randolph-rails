/~ funktioniert bis erstes "Rechenzeichen" kommt ~/
/~ Funktionen wie sin(x), cos(), ... muessen noch beruecksichtigt werden ~/
/~ evtl. nach Alternative zu eval() suchen ~/

/~ --- Token definitions --- ~/

/~ Characters to be ignored ~/
!   ' |\t';

/~ Non-associative tokens ~/
    '\('
    '\)'
    '[0-9]+'                        INT    [* %match = parseInt( %match ); *]
    '[0-9]+\.[0-9]*|[0-9]*\.[0-9]+' FLOAT  [* %match = parseFloat( %match ); *]
    '[a-zA-Z0-9]+\([a-zA-Z0-9]+[a-zA-Z0-9,\ ]*\)[\ ]*[=][\ ]*[a-zA-Z0-9\+\-\*\/]+' FUNC   [* %match = (function(x) {
            var input = x.split('(')[1].split(')')[0];
            var vars = input.split(',');
            var output = '__'+ vars[0];
            if(vars.length > 1) { for(var i=1; i<vars.length; i++) { output += ', __'+ vars[i]; } }
            var expr = x.split('=')[1];
            for(var i=0; i<vars.length; i++) { expr = expr.replace(eval('/'+vars[i]+'/g'), '__'+vars[i]); }
            return "function ("+output+") { return "+ expr +"; };";
         })(%match); *]
    '[a-zA-Z]+(\_*[a-zA-Z0-9]+)*'   VAR    [* %match = "registeredElements['"+ %match +"'].id" *]
    '\&[a-zA-Z]+\;'                 HTML   [* %match = String( %match ) *]
    '\"[a-zA-Z0-9\.\ ]*\"'          STRING [* %match = String( %match ) *]

    ;

/~ Left-associative tokens, lowest precedence ~/
<  '\+'
   '\,'
   '\-';

/~ Left-associative tokens, middle precedence ~/
<  '\*'
   '/';

/~ Left-associative tokens, highest precedence ~/
<  '^';

##

/~ --- Grammar specification --- ~/

p:      e              [* alert( %1 ); *] /~ spaeter JXG.GeogebraReader.debug(%1); ~/
        ;

e:        e ',' e      [* %% = "x: "+ %1 +", y: "+ %3; *]
        | e '+' e      [* %% = %1 + %3; *]
        | e '-' e      [* %% = %1 - %3; *]
        | e '*' e      [* %% = %1 * %3; *]
        | e '/' e      [* %% = %1 / %3; *]
        | e '^' e      [* %% = Math.pow(%1, %3); *]
        | '-' e &'*'   [* %% = %2 * -1; *]
        | '(' e ')'    [* %% = %2; *]
        | VAR
        | STRING '+' e /~ &quot;&quot; + (1 - p_2) ~/
        | FUNC         [* %% = alert(%1); *] /~ f(x) = e ~/  /~ spaeter kein alert, ... ~/
        | INT
        | FLOAT
        | HTML
        | STRING       /~ &quot;F&quot; ~/
        ;