(function(){var a="sproutcore/standard_theme";if(!SC.BUNDLE_INFO){throw"SC.BUNDLE_INFO is not defined!"
}if(SC.BUNDLE_INFO[a]){return}SC.BUNDLE_INFO[a]={requires:["sproutcore/empty_theme"],styles:["/static/sproutcore/standard_theme/es/ae78e682efa8d92ab1f23de86e1e7855014416c6/stylesheet-packed.css","/static/sproutcore/standard_theme/es/ae78e682efa8d92ab1f23de86e1e7855014416c6/stylesheet.css"],scripts:["/static/sproutcore/standard_theme/es/ae78e682efa8d92ab1f23de86e1e7855014416c6/javascript-packed.js"]}
})();SmartGraphs=SC.Application.create({NAMESPACE:"SmartGraphs",VERSION:"0.1.0",store:SC.Store.create().from(SC.Record.fixtures)});
SmartGraphs.axesController=SC.ObjectController.create({padding:{top:20,right:20,bottom:20,left:40}});
SmartGraphs.dataSeriesController=SC.ArrayController.create({totalChanges:0,allowsMultipleSelection:NO,_valuesDidChange:function(){this.incrementProperty("totalChanges")
},_arrayDidChange:function(){this.forEach(function(a){console.log("adding observer to item: "+a);
a.addObserver("y",this,this._valuesDidChange)},this)}.observes(".[]")});SmartGraphs.TEXT_RESPONSE="text";
SmartGraphs.GRAPH_ANNOTATION_RESPONSE="annotation";SmartGraphs.Question=SC.Record.extend({sequence:SC.Record.toOne("SmartGraphs.QuestionSequence",{inverse:"questions"}),index:SC.Record.attr(Number),shortName:SC.Record.attr(String),responseType:SC.Record.attr(String),prompt:SC.Record.attr(String),correctResponse:SC.Record.attr(String),correctResponseFeedback:SC.Record.attr(String),incorrectResponseFeedback:SC.Record.attr(String),isAnswered:false,feedback:null,textResponse:null,isSelectable:false});
sc_require("models/question");SmartGraphs.questionController=SC.ObjectController.create({contentBinding:"SmartGraphs.questionSequenceController.selectedQuestion",contentDidChange:function(){this.set("isSelectable",true)
}.observes(".content"),checkResponse:function(){if(this.get("response")===this.get("correctResponse")){this.didReceiveCorrectResponse()
}else{this.didReceiveIncorrectResponse()}},didReceiveCorrectResponse:function(){this.set("feedback",this.get("correctResponseFeedback"));
this.set("isAnswered",true);var a=SmartGraphs.questionSequenceController.get("nextQuestion");
if(a){a.set("isSelectable",true)}},didReceiveIncorrectResponse:function(){this.set("feedback",this.get("incorrectResponseFeedback"))
},shouldAcceptTextResponse:function(){return(this.get("responseType")===SmartGraphs.TEXT_RESPONSE)
}.property(),shouldAcceptGraphicalResponse:function(){return(this.get("responseType")===SmartGraphs.GRAPH_ANNOTATION_RESPONSE)
}.property(),graphicalResponse:function(){var a=SmartGraphs.dataSeriesController.get("selection");
return(a.get("length")===1)?a.toArray().objectAt(0).get("x")+"":null}.property(),response:function(){if(this.get("shouldAcceptTextResponse")){return this.get("textResponse")
}else{if(this.get("shouldAcceptGraphicalResponse")){return this.get("graphicalResponse")
}else{return null}}}.property()});SmartGraphs.questionSequenceController=SC.ArrayController.create({allowsEmptySelection:NO,allowsMultipleSelection:NO,selectObject:function(a){SC.RunLoop.begin();
arguments.callee.base.apply(this,arguments);SC.RunLoop.end()},selectedQuestion:function(a,b){if(b!==undefined&&b.get("isSelectable")){this.selectObject(b)
}return this.get("selection").toArray().objectAt(0)}.property("selection"),indexOfSelectedQuestion:function(){var b=this.get("selection");
var c=b.indexSetForSource(this);var a=c?c.toArray().objectAt(0):undefined;return a
}.property("selectedQuestion","content","[]").cacheable(),previousQuestion:function(){var a=this.get("indexOfSelectedQuestion");
return(a>0)?this.objectAt(a-1):null}.property("selectedQuestion","content","[]").cacheable(),nextQuestion:function(){var a=this.get("indexOfSelectedQuestion");
return(a+1<this.get("length"))?this.objectAt(a+1):null}.property("selectedQuestion","content","[]").cacheable(),isFirstQuestionBinding:SC.Binding.bool(".previousQuestion").not(),isLastQuestionBinding:SC.Binding.bool(".nextQuestion").not(),canSelectPreviousQuestionBinding:SC.Binding.not(".isFirstQuestion"),nextQuestionIsSelectableBinding:SC.Binding.oneWay("*nextQuestion.isSelectable"),canSelectNextQuestion:function(){return(!this.get("isLastQuestion")&&this.get("nextQuestionIsSelectable"))
}.property("isLastQuestion","nextQuestionIsSelectable").cacheable(),selectPreviousQuestion:function(){if(this.get("canSelectPreviousQuestion")){this.selectObject(this.get("previousQuestion"))
}},selectNextQuestion:function(){if(this.get("canSelectNextQuestion")){this.selectObject(this.get("nextQuestion"))
}},sequenceDidChange:function(){var d=this.get("sequence");var b=SC.Query.local(SmartGraphs.Question,{conditions:"sequence = {sequence}",sequence:d,orderBy:"index ASC"});
var a=SmartGraphs.store.find(b);this.set("content",a);var c=a.objectAt(0);if(c){c.set("isSelectable",true);
this.set("selectedQuestion",c)}}.observes("sequence")});SmartGraphs.Axes=SC.Record.extend({xMax:SC.Record.attr(Number),xMin:SC.Record.attr(Number),yMax:SC.Record.attr(Number),yMin:SC.Record.attr(Number),ySteps:SC.Record.attr(Number),xSteps:SC.Record.attr(Number)});
sc_require("models/axes");SmartGraphs.Axes.FIXTURES=[{guid:1,xMin:0,xMax:10,yMin:0,yMax:2000,xSteps:10,ySteps:10}];
SmartGraphs.DataPoint=SC.Record.extend({series:SC.Record.toOne("SmartGraphs.DataSeries",{inverse:"points"}),x:SC.Record.attr(Number),y:SC.Record.attr(Number)});
sc_require("models/data_point");SmartGraphs.DataPoint.FIXTURES=[{x:1,y:200,guid:1,series:"series-1"},{x:2,y:400,guid:2,series:"series-1"},{x:3,y:600,guid:3,series:"series-1"},{x:4,y:800,guid:4,series:"series-1"},{x:5,y:800,guid:5,series:"series-1"},{x:6,y:800,guid:6,series:"series-1"},{x:7,y:1050,guid:7,series:"series-1"},{x:8,y:1300,guid:8,series:"series-1"},{x:9,y:1550,guid:9,series:"series-1"},{x:10,y:1800,guid:10,series:"series-1"}];
SmartGraphs.DataSeries=SC.Record.extend({points:SC.Record.toMany("SmartGraphs.DataPoint",{inverse:"series"})});
sc_require("models/data_series");SmartGraphs.Pair=SC.Object.extend({x:null,y:null});
SmartGraphs.DataSeries.FIXTURES=[{guid:"series-1",points:(function(){var b=[];for(var a=1;
a<=10;a++){b.push(a+"")}return b}())}];sc_require("models/question");SmartGraphs.Question.FIXTURES=[{guid:1,sequence:"sequence-1",index:1,shortName:"Maria Runs",responseType:SmartGraphs.GRAPH_ANNOTATION_RESPONSE,prompt:"<p>Maria ran practice laps around the track. Her coach wrote the distance she ran after each minute. These data are shown in the scatterplot and the table at right.</p><p>Click on the point in the scatterplot that shows where and when Maria first stopped to talk to her coach.</p>",correctResponse:"4",correctResponseFeedback:"<p>That's correct. Maria stopped at 4 minutes, after having run 800 meters.</p>",incorrectResponseFeedback:"<p>That's not quite right. Remember that when Maria stops, her distance stays the same at successive time points.</p><p>See if you can use that hint to find the point where Maria first stopped to talk to her coach. </p><p><i>(Imagine this and similar feedback being displayed in animated, graphical form.)</i></p>"},{guid:2,sequence:"sequence-1",index:2,shortName:"She Gets A Pep Talk",responseType:SmartGraphs.TEXT_RESPONSE,prompt:"<p>For how many minutes did Maria talk with her coach?</p>",correctResponse:"2",correctResponseFeedback:"<p>That's correct. Maria stopped at 4 minutes, and didn't move again until 6 minutes.</p>",incorrectResponseFeedback:"<p>That's not correct. Look for the group of time points where the y value, which represents Maria's distance, remains the same. Then subtract the latest time from the earliest time.</p><p><i>(Imagine this feedback broken into component steps, each graphical in nature, that build up a visual/animated set of annotations that can be reviewed later.)</i></p>"},{guid:3,sequence:"sequence-1",index:3,shortName:"She Runs Again",responseType:SmartGraphs.TEXT_RESPONSE,prompt:"<p><i>(This is a slightly trickier question that illustrates a next step towards more interesting questions that could be posed and that could have interactive, graphical scaffolds.)</i></p><p>Did you notice that Maria's coach must have written down her position three times while they were talking?</p><p>After the third time he wrote down her position, about how many <em>seconds</em> did Maria take to start running again?</p>",correctResponse:"0",correctResponseFeedback:"<p>That's correct. You can tell from the slope of her position versus time graph that she must have started right away.</p>",incorrectResponseFeedback:"<p>That's not quite right... </p><p><i>(We could visualize the intersection of the 'chatting' line segment and last 'running' line segment, perhaps including animated and/or interactive explorations of where that intersection would be if Maria had waited longer to start running.)</i></p>"}];
SmartGraphs.QuestionSequence=SC.Record.extend({questions:SC.Record.toMany("SmartGraphs.Question",{inverse:"sequence"})});
sc_require("models/question_sequence");SmartGraphs.QuestionSequence.FIXTURES=[{guid:"sequence-1",questions:["1","2","3"]}];
SmartGraphs.AxesView=SC.View.extend({displayProperties:"xMin xMax yMin yMax padding".w(),didCreateLayer:function(){this.$().css("zIndex","-1")
},render:function(c,a){var m=this.get("parentView");var p=m.get("raphaelObject");
var l=this.get("padding");var h=m.get("layout");var d=this.get("xMin"),g=this.get("xMax"),n=this.get("yMin"),e=this.get("yMax"),f=this.get("xSteps"),i=this.get("ySteps");
if(p&&l&&h&&(d!==undefined)&&(g!==undefined)&&(n!==undefined)&&(e!==undefined)){var o=h.height,b=h.width;
var k=b-l.left-l.right;var j=o-l.top-l.bottom;if(this._x){this._x.remove()}this._x=p.g.axis(l.left,l.top+j,k,0,g,f,0);
if(this._y){this._y.remove()}this._y=p.g.axis(l.left,l.top+j,j,0,e,i,1);this.renderChildViews(c,a)
}}});SmartGraphs.EditableListItemView=SC.ListItemView.extend({inlineEditorShouldBeginEditing:function(){return YES
}});sc_require("models/question");SmartGraphs.OldQuestionView=SC.View.extend({contentDisplayProperties:"prompt".w(),prompt:"[prompt]",inputType:SmartGraphs.TEXT_RESPONSE,textInputShouldBeVisibleBinding:SC.Binding.transform(function(a){return(a===SmartGraphs.TEXT_RESPONSE)
}).from(".inputType"),answer:function(){var c=this.get("inputType");if(c===SmartGraphs.TEXT_RESPONSE){var a=this.getPath("inputView.textFieldView.value").strip();
console.log("inputView.textFieldView.value = "+a);return a}else{if(c===SmartGraphs.GRAPH_ANNOTATION_RESPONSE){var b=SmartGraphs.getPath("dataSeriesController.selection");
console.log("selection = "+b);return(b.get("length")===1)?b.toArray().objectAt(0).get("x"):null
}}}.property(),childViews:"promptView inputView checkButton".w(),promptView:SC.StaticContentView.design({contentBinding:".parentView.prompt"}),inputView:SC.View.design({layout:{height:20,width:150},useStaticLayout:YES,isVisibleBinding:".parentView.textInputShouldBeVisible",childViews:"textFieldView".w(),textFieldView:SC.TextFieldView.design({isTextArea:YES})}),checkButton:SC.ButtonView.design({useStaticLayout:YES,title:"Check Answer",action:function(){var a=this.getPath("parentView.answer");
if(a){if(a===this.getPath("parentView.correctAnswer")){SC.AlertPane.info("'"+a+"' is the correct answer!")
}else{SC.AlertPane.info("Sorry, '"+a+"' is not the correct answer.")}}else{SC.AlertPane.info("Sorry, that is not the correct answer.")
}}})});SmartGraphs.QuestionView=SC.View.extend({displayProperties:"controller prompt feedback textInputShouldBeVisible".w(),childViews:"promptView inputView checkButton feedbackView".w(),promptView:SC.StaticContentView.design({displayProperties:"content".w(),contentBinding:SC.Binding.oneWay(".parentView.prompt")}),inputView:SC.View.design({displayProperties:"isVisible".w(),layout:{height:20,width:150},useStaticLayout:YES,isVisibleBinding:".parentView.textInputShouldBeVisible",childViews:"textFieldView".w(),textFieldView:SC.TextFieldView.design({isTextArea:YES,valueBinding:".parentView.parentView.controller.textResponse"})}),checkButton:SC.ButtonView.design({useStaticLayout:YES,title:"Check Answer",targetBinding:".parentView.controller",action:"checkResponse"}),feedbackView:SC.StaticContentView.design({displayProperties:"content".w(),contentBinding:SC.Binding.oneWay(".parentView.feedback"),isVisibleBinding:SC.Binding.oneWay(".parentView.feedback").bool()})});
SmartGraphs.QuestionAuthorView=SC.View.extend({childViews:"titleLabel indexViewLabel indexView shortNameViewLabel shortNameView responseTypeViewLabel responseTypeView promptViewLabel promptView correctResponseViewLabel correctResponseView correctResponseFeedbackViewLabel correctResponseFeedbackView incorrectResponseFeedbackViewLabel incorrectResponseFeedbackView".w(),titleLabel:SC.StaticContentView.design({backgroundColor:"black",content:"Selected Question's Data:"}),indexViewLabel:SC.StaticContentView.design({displayProperties:"isVisible".w(),backgroundColor:"grey",content:"Question#:"}),indexView:SC.StaticContentView.design({displayProperties:"isVisible".w(),backgroundColor:"darkgrey",contentBinding:"*parentView.content.index",canEditContent:YES}),shortNameViewLabel:SC.StaticContentView.design({displayProperties:"isVisible".w(),backgroundColor:"grey",content:"Short Name for navigation tabs:"}),shortNameView:SC.StaticContentView.design({displayProperties:"isVisible".w(),backgroundColor:"darkgrey",contentBinding:"*parentView.content.shortName"}),responseTypeViewLabel:SC.StaticContentView.design({displayProperties:"isVisible".w(),backgroundColor:"grey",content:"Response Type:"}),responseTypeView:SC.StaticContentView.design({displayProperties:"isVisible".w(),backgroundColor:"darkgrey",contentBinding:"*parentView.content.responseType"}),promptViewLabel:SC.StaticContentView.design({displayProperties:"isVisible".w(),backgroundColor:"grey",content:"Question Prompt:"}),promptView:SC.StaticContentView.design({displayProperties:"isVisible".w(),backgroundColor:"darkgrey",contentBinding:"*parentView.content.prompt"}),correctResponseViewLabel:SC.StaticContentView.design({displayProperties:"isVisible".w(),backgroundColor:"grey",content:"Correct Response:"}),correctResponseView:SC.StaticContentView.design({displayProperties:"isVisible".w(),backgroundColor:"darkgrey",contentBinding:"*parentView.content.correctResponse"}),correctResponseFeedbackViewLabel:SC.StaticContentView.design({displayProperties:"isVisible".w(),backgroundColor:"grey",content:"Correct Response Feedback:"}),correctResponseFeedbackView:SC.StaticContentView.design({displayProperties:"isVisible".w(),backgroundColor:"darkgrey",contentBinding:"*parentView.content.correctResponseFeedback"}),incorrectResponseFeedbackViewLabel:SC.StaticContentView.design({displayProperties:"isVisible".w(),backgroundColor:"grey",content:"Incorrect Response Feedback:"}),incorrectResponseFeedbackView:SC.StaticContentView.design({displayProperties:"isVisible".w(),backgroundColor:"darkgrey",contentBinding:"*parentView.content.incorrectResponseFeedback"})});
SmartGraphs.RaphaelView=SC.View.extend({raphaelObject:null,_childViewForId:{},_lastViewForMouseMove:null,didCreateLayer:function(){var b=Raphael;
var c=this.get("frame");var a=b(this.get("layer"),c.width,c.height);a.canvas.raphael=a;
this.set("raphaelObject",a)},registerChildView:function(a,b){this._childViewForId[b]=a
},_ID_MATCHER:/^(sc\d+)/,_childViewForEvent:function(b){var c=b.target.id;var a=c.match(this._ID_MATCHER);
return a?this._childViewForId[a[1]]:null},mouseMoved:function(c){var b=this._childViewForEvent(c);
if(b&&b.mouseMoved){b.mouseMoved(c)}var a=this._lastViewForMouseMove;if(b!==a){if(a&&a.mouseExited){a.mouseExited(c)
}if(b&&b.mouseEntered){b.mouseEntered(c)}}this._lastViewForMouseMove=b},mouseDown:function(b){var a=this._childViewForEvent(b);
if(a){return a.mouseDown(b)}}});SmartGraphs.SeriesView=SC.View.extend({_raphaelObjForId:{},_dataPointForId:{},_highlightedPoint:null,NO_HIGHLIGHT_ATTR:{r:4},HIGHLIGHT_ATTR:{r:6},SELECTED_ATTR:{stroke:"#aa0000",fill:"#aa0000",opacity:0.8},NOT_SELECTED_ATTR:{stroke:"#BFADA7",fill:"#BFADA7",opacity:0.5},DATA_POINT_ID_MATCHER:"",id:"",init:function(){arguments.callee.base.apply(this,arguments);
this.id=SC.guidFor(this);this.DATA_POINT_ID_MATCHER=new RegExp(this.id+"-data-point-(\\d+)");
var a=this.get("parentView");a.registerChildView(this,this.id)},displayProperties:"xMin xMax yMin yMax padding selection content content.totalChanges content.[]".w(),didCreateLayer:function(){this.$().css("zIndex","-1")
},mouseDown:function(c){var d=this._dataPointForId[c.target.id];if(d){var a=this.get("controller");
var b=this.get("selection");if(b.contains(d)){a.deselectObject(d)}else{a.selectObject(d,NO)
}}},mouseEntered:function(b){console.log("mouseEntered "+b.target.id);var a=this._raphaelObjForId[b.target.id];
if(a){a.attr(this.HIGHLIGHT_ATTR)}this._highlightedPoint=a},mouseExited:function(b){var a=this._highlightedPoint;
if(a){a.attr(this.NO_HIGHLIGHT_ATTR)}this._highlightedPoint=null},render:function(d,g){var k=this.get("parentView");
var B=k.$().children()[0];var e=(B&&B.raphael)?B.raphael:null;var o=this.get("padding");
var v=k.get("layout");var w=this.get("xMin"),z=this.get("xMax"),a=this.get("yMin"),b=this.get("yMax");
if(e&&o&&v&&(w!==undefined)&&(z!==undefined)&&(a!==undefined)&&(b!==undefined)){var p=v.height,r=v.width;
var f=r-o.left-o.right;var u=p-o.top-o.bottom;var D=f/z;var c=u/b;var A=this._raphaelObjForId;
for(var j in A){if(A.hasOwnProperty(j)){A[j].remove()}}this._raphaelObjForId={};this._dataPointForId={};
var m=this.get("content");var C=this.get("selection");for(var t=0,n=m.get("length");
t<n;t++){var q=m.objectAt(t);var l=o.left+(q.get("x")*D);var h=o.top+u-(q.get("y")*c);
var s=e.circle(l,h).attr(this.NO_HIGHLIGHT_ATTR);if(C.contains(q)){s.attr(this.SELECTED_ATTR)
}else{s.attr(this.NOT_SELECTED_ATTR)}s.node.id=this.id+"-data-point-%@".fmt(t);this._raphaelObjForId[s.node.id]=s;
this._dataPointForId[s.node.id]=q}}}});SmartGraphs.main=function main(){SmartGraphs.getPath("mainPage.mainPane").append();
var b=SmartGraphs.store.find(SmartGraphs.DataSeries,"series-1");var c=SmartGraphs.store.find(SmartGraphs.Axes,"1");
SmartGraphs.dataSeriesController.set("content",b.get("points"));SmartGraphs.axesController.set("content",c);
var a=SmartGraphs.store.find(SmartGraphs.QuestionSequence,"sequence-1");SmartGraphs.questionSequenceController.set("sequence",a)
};function main(){SmartGraphs.main()}sc_require("main");SmartGraphs.mainPage=SC.Page.design({mainPane:SC.MainPane.design({layout:{width:1470,height:820},childViews:"promptView graphView tableView authorView".w(),promptView:SC.View.design({layout:{left:20,top:20,width:455,height:680},classNames:["smartgraph-pane"],childViews:"navButtons questionView nextButton backButton".w(),navButtons:SC.SegmentedView.design({layout:{top:25},displayProperties:"nextQuestionIsSelectable".w(),itemsBinding:"SmartGraphs.questionSequenceController",itemTitleKey:"shortName",itemIsEnabledKey:"isSelectable",valueBinding:"SmartGraphs.questionSequenceController.selectedQuestion",nextQuestionIsSelectableBinding:SC.Binding.oneWay("SmartGraphs.questionSequenceController*nextQuestion.isSelectable")}),questionView:SmartGraphs.QuestionView.design({classNames:"sg-question".w(),layout:{top:50,bottom:5,left:5,right:5},controllerBinding:"SmartGraphs.questionController",promptBinding:"SmartGraphs.questionController.prompt",textInputShouldBeVisibleBinding:"SmartGraphs.questionController.shouldAcceptTextResponse",feedbackBinding:"SmartGraphs.questionController.feedback"}),nextButton:SC.ButtonView.design({displayProperties:["isEnabled"],layout:{top:620,left:325,width:80},title:"Next",target:"SmartGraphs.questionSequenceController",action:"selectNextQuestion",isEnabledBinding:"SmartGraphs.questionSequenceController.canSelectNextQuestion",isVisibleBinding:SC.Binding.not("SmartGraphs.questionSequenceController.isLastQuestion").oneWay()}),backButton:SC.ButtonView.design({displayProperties:["isEnabled"],layout:{top:620,left:50,width:80},title:"Back",target:"SmartGraphs.questionSequenceController",action:"selectPreviousQuestion",isEnabledBinding:"SmartGraphs.questionSequenceController.canSelectPreviousQuestion",isVisibleBinding:SC.Binding.not("SmartGraphs.questionSequenceController.isFirstQuestion").oneWay()})}),graphView:SmartGraphs.RaphaelView.design({layout:{left:485,top:20,width:455,height:335},childViews:"axesView series1View".w(),classNames:["smartgraph-pane"],axesView:SmartGraphs.AxesView.design({xMinBinding:"SmartGraphs.axesController.xMin",xMaxBinding:"SmartGraphs.axesController.xMax",yMinBinding:"SmartGraphs.axesController.yMin",yMaxBinding:"SmartGraphs.axesController.yMax",xStepsBinding:"SmartGraphs.axesController.xSteps",yStepsBinding:"SmartGraphs.axesController.ySteps",paddingBinding:"SmartGraphs.axesController.padding"}),series1View:SmartGraphs.SeriesView.design({xMinBinding:"SmartGraphs.axesController.xMin",xMaxBinding:"SmartGraphs.axesController.xMax",yMinBinding:"SmartGraphs.axesController.yMin",yMaxBinding:"SmartGraphs.axesController.yMax",xScaleBinding:"SmartGraphs.axesController.xScale",yScaleBinding:"SmartGraphs.axesController.yScale",paddingBinding:"SmartGraphs.axesController.padding",controllerBinding:"SmartGraphs.dataSeriesController",contentBinding:"SmartGraphs.dataSeriesController.arrangedObjects",selectionBinding:"SmartGraphs.dataSeriesController.selection"})}),tableView:SC.View.design({layout:{left:485,top:365,width:455,height:335},classNames:["smartgraph-pane"],childViews:["labelsView","scrollerView"],labelsView:SC.View.design({layout:{left:0,top:0,width:455,height:30},childViews:["xsLabel","ysLabel"],xsLabel:SC.LabelView.design({layout:{left:10,width:40,top:7,height:20},displayValue:"time"}),ysLabel:SC.LabelView.design({layout:{left:70,width:50,top:7,height:20},displayValue:"distance"})}),scrollerView:SC.ScrollView.design({layout:{left:0,top:30,width:455,height:305},borderStyle:SC.BORDER_NONE,contentView:SC.View.design({childViews:["xsView","ysView"],xHeightBinding:SC.Binding.from(".xsView.height").oneWay(),yHeightBinding:SC.Binding.from(".ysView.height").oneWay(),height:function(){return Math.max(this.get("xHeight"),this.get("yHeight"))
}.property("xHeight","yHeight").cacheable(),_heightDidChange:function(){this.adjust("height",this.get("height"))
}.observes("height"),xsView:SC.ListView.design({height:function(){var a=this.get("layout");
return this.get("calculatedHeight")+(a.top||0)+(a.bottom||0)}.property("calculatedHeight","layout").cacheable(),layout:{left:10,top:0,bottom:15,width:50},canEditContent:NO,contentValueKey:"x",contentBinding:"SmartGraphs.dataSeriesController.arrangedObjects",selectionBinding:"SmartGraphs.dataSeriesController.selection",rowHeight:18}),ysView:SC.ListView.design({height:function(){var a=this.get("layout");
return this.get("calculatedHeight")+(a.top||0)+(a.bottom||0)}.property("calculatedHeight","layout").cacheable(),layout:{left:70,top:0,bottom:15,width:50},isEditable:YES,canEditContent:YES,exampleView:SmartGraphs.EditableListItemView,contentValueKey:"y",contentBinding:"SmartGraphs.dataSeriesController.arrangedObjects",selectionBinding:"SmartGraphs.dataSeriesController.selection",rowHeight:18})})})}),authorView:SmartGraphs.QuestionAuthorView.design({layout:{left:965,top:5,bottom:20,width:300},contentBinding:"SmartGraphs.questionSequenceController.selectedQuestion",canEditContent:YES})})});