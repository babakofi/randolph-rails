(function(){var a="sproutcore/standard_theme";if(!SC.BUNDLE_INFO){throw"SC.BUNDLE_INFO is not defined!"
}if(SC.BUNDLE_INFO[a]){return}SC.BUNDLE_INFO[a]={requires:["sproutcore/empty_theme"],styles:["/static/sproutcore/standard_theme/es/ae78e682efa8d92ab1f23de86e1e7855014416c6/stylesheet-packed.css","/static/sproutcore/standard_theme/es/ae78e682efa8d92ab1f23de86e1e7855014416c6/stylesheet.css"],scripts:["/static/sproutcore/standard_theme/es/ae78e682efa8d92ab1f23de86e1e7855014416c6/javascript-packed.js"]}
})();Smartgraphs=SC.Application.create({NAMESPACE:"Smartgraphs",VERSION:"0.1.0",store:SC.Store.create().from(SC.Record.fixtures)});
Smartgraphs.authoringController=SC.ObjectController.create({toggleAuthoring:function(){Smartgraphs.mainPage.mainPane.authorView.addProbe("isVisible");
if(Smartgraphs.mainPage.mainPane.authorView.get("isVisible")==YES){Smartgraphs.mainPage.mainPane.authorView.set("isVisible",NO)
}else{Smartgraphs.mainPage.mainPane.authorView.set("isVisible",YES)}}});Smartgraphs.axesController=SC.ObjectController.create({padding:{top:20,right:20,bottom:40,left:60},contentBinding:SC.Binding.oneWay("Smartgraphs.guidePageController.axes")});
Smartgraphs.dataSeriesController=SC.ArrayController.create({seriesBinding:SC.Binding.oneWay("Smartgraphs.guidePageController.dataSeries"),seriesGuidBinding:SC.Binding.oneWay("Smartgraphs.guidePageController.dataSeries.guid"),content:function(){var a=this.get("series");
var b=SC.Query.local(Smartgraphs.DataPoint,{conditions:"series = {series}",series:a,orderBy:"x"});
return Smartgraphs.store.find(b)}.property("series").cacheable(),addDataPoint:function(a,b){SC.RunLoop.begin();
Smartgraphs.store.createRecord(Smartgraphs.DataPoint,{x:a,y:b,series:this.getPath("series.guid")});
Smartgraphs.store.commitRecords();SC.RunLoop.end()},allowsMultipleSelection:NO});
Smartgraphs.dialogTurnController=SC.ObjectController.create({contentBinding:"Smartgraphs.guidePageController.selectedDialogTurn",contentDidChange:function(){this.invokeOnce(this._updateForChangedContent)
}.observes("content"),_updateForChangedContent:function(){var b=this.getPath("responseTemplate");
var a=[];if(b&&!this.get("responseArray")){a.length=b.get("numberOfResponseFields");
this.set("responseArray",a)}if(this.get("isLastTurn")){Smartgraphs.guidePageSequenceController.set("nextPageIsSelectable",YES)
}},updateResponse:function(a,b){var c=this.get("responseArray");c.replace(a,1,[b])
},gotoNextTurn:function(){if(Smartgraphs.responseVerifierController.get("verificationIsRequired")){Smartgraphs.responseVerifierController.checkResponse()
}else{var a=this.get("nextTurnForNominalResponse");Smartgraphs.guidePageController.set("selectedDialogTurn",a)
}},didReceiveCorrectResponse:function(){console.log("didReceiveCorrectResponse");
var a=this.get("nextTurnForNominalResponse");Smartgraphs.guidePageController.set("selectedDialogTurn",a)
},didReceiveIncorrectResponse:function(){console.log("didReceiveIncorrectResponse");
var a=this.get("nextTurnForIncorrectResponse");Smartgraphs.guidePageController.set("selectedDialogTurn",a)
},didReceiveIncompleteResponse:function(){console.log("didReceiveIncompleteResponse")
},didReceiveMalformedResponse:function(){console.log("didReceiveMalformedResponse")
},defaultNextTurnButtonTitle:"Check My Answer",rawNextTurnButtonTitleBinding:SC.Binding.oneWay("*content.nextTurnButtonTitle"),nextTurnButtonTitle:function(){var a=this.get("rawNextTurnButtonTitle");
return a?a:this.get("defaultNextTurnButtonTitle")}.property("rawNextTurnButtonTitle").cacheable(),nextTurnButtonShouldBeVisible:null,nextTurnButtonShouldBeVisibleBinding:SC.Binding.not(".isLastTurn").oneWay(),verificationIsNotRequired:null,verificationIsNotRequiredBinding:SC.Binding.not("Smartgraphs.responseVerifierController.verificationIsRequired").oneWay(),nextTurnButtonShouldBeEnabled:null,nextTurnButtonShouldBeEnabledBinding:SC.Binding.or("Smartgraphs.dialogTurnController.verificationIsNotRequired","Smartgraphs.responseVerifierController.responseIsReady"),sensorAppletShouldBeEnabled:null,sensorAppletShouldBeEnabledBinding:SC.Binding.oneWay("Smartgraphs.guidePageController.sensorAppletShouldBeEnabled")});
Smartgraphs.GuidePage=SC.Record.extend({sequence:SC.Record.toOne("Smartgraphs.GuidePageSequence",{inverse:"pages"}),index:SC.Record.attr(Number),title:SC.Record.attr(String),introText:SC.Record.attr(String),firstDialogTurn:SC.Record.toOne("Smartgraphs.DialogTurn"),dataSeries:SC.Record.toOne("Smartgraphs.DataSeries"),axes:SC.Record.toOne("Smartgraphs.Axes"),sensorAppletShouldBeEnabled:SC.Record.attr(Boolean),selectedDialogTurn:null,isSelectable:NO});
sc_require("models/guide_page");Smartgraphs.guidePageController=SC.ObjectController.create({contentBinding:"Smartgraphs.guidePageSequenceController.selectedPage",contentDidChange:function(){console.log("Smartgraphs.guidePageController observed content");
this.invokeOnce(this._setDialogTurn)}.observes("content"),_setDialogTurn:function(){console.log("_setDialogTurn");
if(SC.none(this.get("selectedDialogTurn"))){this.set("selectedDialogTurn",this.get("firstDialogTurn"))
}}});Smartgraphs.guidePageSequenceController=SC.ArrayController.create({allowsEmptySelection:NO,allowsMultipleSelection:NO,selectObject:function(a){SC.RunLoop.begin();
arguments.callee.base.apply(this,arguments);SC.RunLoop.end()},sequenceDidChange:function(){console.log("Smartgraphs.guidePageSequenceController observed sequence");
var c=this.get("sequence");var a=c.get("pages");this.set("content",a);var b=a.objectAt(0);
if(b){b.set("isSelectable",true);this.set("selectedPage",b)}}.observes("sequence"),selectedPage:function(a,b){if(b!==undefined&&b.get("isSelectable")){this.selectObject(b)
}return this.get("selection").toArray().objectAt(0)}.property("selection"),indexOfSelectedPage:function(){var b=this.get("selection");
var c=b.indexSetForSource(this);var a=c?c.toArray().objectAt(0):undefined;return a
}.property("selectedPage","content","[]").cacheable(),previousPage:function(){var a=this.get("indexOfSelectedPage");
return(a>0)?this.objectAt(a-1):null}.property("selectedPage","content","[]").cacheable(),nextPage:function(){var a=this.get("indexOfSelectedPage");
return(a+1<this.get("length"))?this.objectAt(a+1):null}.property("selectedPage","content","[]").cacheable(),isFirstPage:null,isFirstPageBinding:SC.Binding.bool(".previousPage").not(),isLastPage:null,isLastPageBinding:SC.Binding.bool(".nextPage").not(),canSelectPreviousPage:null,canSelectPreviousPageBinding:SC.Binding.not(".isFirstPage"),nextPageIsSelectable:null,nextPageIsSelectableBinding:"*nextPage.isSelectable",canSelectNextPage:function(){return(!this.get("isLastPage")&&this.get("nextPageIsSelectable"))
}.property("isLastPage","nextPageIsSelectable").cacheable(),selectPreviousPage:function(){if(this.get("canSelectPreviousPage")){this.selectObject(this.get("previousPage"))
}},selectNextPage:function(){if(this.get("canSelectNextPage")){this.selectObject(this.get("nextPage"))
}}});Smartgraphs.responseTemplateController=SC.ObjectController.create({contentBinding:"Smartgraphs.dialogTurnController.responseTemplate"});
Smartgraphs.responseVerifierController=SC.ObjectController.create({contentBinding:SC.Binding.oneWay("Smartgraphs.dialogTurnController.responseVerifier"),verificationIsRequired:null,verificationIsRequiredBinding:SC.Binding.bool(".content"),contentDidChange:function(){var a=this.get("content");
console.log("Smartgraphs.responseVerifierController observed content");if(!a){return
}this.invokeOnce(this._setVerifierDelegate)}.observes("content"),_setVerifierDelegate:function(){var a="Smartgraphs."+this.get("verifierDelegateName")+"VerifierDelegate";
var b=SC.objectForPropertyPath(a);b.set("configString",this.get("configString"));
this.set("verifierDelegate",b)},responseIsReady:null,responseIsReadyBinding:SC.Binding.bool("*verifierDelegate.responseIsReady"),checkResponse:function(){var a=this.get("verifierDelegate");
a.checkResponse();var d=a.get("responseIsIncomplete");var c=a.get("responseIsMalformed");
var b=a.get("responseIsCorrect");if(d){Smartgraphs.dialogTurnController.didReceiveIncompleteResponse();
return}if(c){Smartgraphs.dialogTurnController.didReceiveMalformedResponse();return
}this.set("responseAsString",a.get("responseAsString"));if(b){Smartgraphs.dialogTurnController.didReceiveCorrectResponse()
}else{Smartgraphs.dialogTurnController.didReceiveIncorrectResponse()}}});Smartgraphs.Axes=SC.Record.extend({xMax:SC.Record.attr(Number),xMin:SC.Record.attr(Number),yMax:SC.Record.attr(Number),yMin:SC.Record.attr(Number),ySteps:SC.Record.attr(Number),xSteps:SC.Record.attr(Number),xLabel:SC.Record.attr(String),yLabel:SC.Record.attr(String),xLabelAbbreviated:SC.Record.attr(String),yLabelAbbreviated:SC.Record.attr(String)});
sc_require("models/axes");Smartgraphs.Axes.FIXTURES=[{guid:"axes-sensor",xMin:0,xMax:60,xSteps:6,xLabel:"Time (seconds)",xLabelAbbreviated:"Time (s)",yMin:0,yMax:5,ySteps:10,yLabel:"Position (meters)",yLabelAbbreviated:"Position (m)"},{guid:"axes-maria",xMin:0,xMax:10,xSteps:10,xLabel:"Time (minutes)",xLabelAbbreviated:"Time (min)",yMin:0,yMax:2000,ySteps:10,yLabel:"Position (meters)",yLabelAbbreviated:"Position (m)"}];
Smartgraphs.DataPoint=SC.Record.extend({series:SC.Record.toOne("Smartgraphs.DataSeries",{inverse:"points"}),x:SC.Record.attr(Number),y:SC.Record.attr(Number)});
sc_require("models/data_point");Smartgraphs.DataPoint.FIXTURES=[{x:1,y:200,guid:1,series:"series-maria"},{x:2,y:400,guid:2,series:"series-maria"},{x:3,y:600,guid:3,series:"series-maria"},{x:4,y:800,guid:4,series:"series-maria"},{x:5,y:800,guid:5,series:"series-maria"},{x:6,y:800,guid:6,series:"series-maria"},{x:7,y:1050,guid:7,series:"series-maria"},{x:8,y:1300,guid:8,series:"series-maria"},{x:9,y:1550,guid:9,series:"series-maria"},{x:10,y:1800,guid:10,series:"series-maria"}];
Smartgraphs.DataSeries=SC.Record.extend({points:SC.Record.toMany("Smartgraphs.DataPoint",{inverse:"series"})});
sc_require("models/data_series");Smartgraphs.Pair=SC.Object.extend({x:null,y:null});
Smartgraphs.DataSeries.FIXTURES=[{guid:"series-sensor",points:[]},{guid:"series-maria",points:["1","2","3","4","5","6","7","8","9","10"]}];
Smartgraphs.DialogTurn=SC.Record.extend({beforeText:SC.Record.attr(String),responseTemplate:SC.Record.toOne("Smartgraphs.ResponseTemplate"),responseVerifier:SC.Record.toOne("Smartgraphs.ResponseVerifier"),staticAnnotationList:SC.Record.toOne("Smartgraphs.StaticAnnotationList"),afterText:SC.Record.attr(String),nextTurnButtonTitle:SC.Record.attr(String),nextTurnForNominalResponse:SC.Record.toOne("Smartgraphs.DialogTurn"),nextTurnForIncorrectResponse:SC.Record.toOne("Smartgraphs.DialogTurn"),isLastTurn:SC.Record.attr(Boolean),responseArray:null});
sc_require("models/dialog_turn");Smartgraphs.DialogTurn.FIXTURES=[{guid:"turn-1-start",beforeText:"<p>How are your motions represented in the position versus time graph? (For example, what does the graph look like when you were standing still?)</p>",responseTemplate:"template-open-1",responseVerifier:null,afterText:"",nextTurnButtonTitle:"Submit My Response",nextTurnForNominalResponse:"turn-1-done",nextTurnForIncorrectResponse:null,isLastTurn:NO},{guid:"turn-1-done",beforeText:"<p>Whenever you see the 'Next>>' button activated, like you see below, you're ready to go to the next step. Go ahead and click on it now.</p>",responseTemplate:null,responseVerifier:null,afterText:"",nextTurnForNominalResponse:null,nextTurnForIncorrectResponse:null,isLastTurn:YES},{guid:"turn-2-start",beforeText:"<p>How are the two different speeds represented in the position versus time graph?</p>",responseTemplate:"template-open-1",responseVerifier:null,afterText:"",nextTurnButtonTitle:"Submit My Response",nextTurnForNominalResponse:"turn-2-done",nextTurnForIncorrectResponse:null,isLastTurn:NO},{guid:"turn-2-done",beforeText:"",responseTemplate:null,responseVerifier:null,afterText:"",nextTurnForNominalResponse:null,nextTurnForIncorrectResponse:null,isLastTurn:YES},{guid:"turn-3-start",beforeText:"<p>What do you notice about the steepness of the three different segments  during each of the motions?</p>",responseTemplate:"template-open-1",responseVerifier:null,afterText:"",nextTurnButtonTitle:"Submit My Response",nextTurnForNominalResponse:"turn-3-done",nextTurnForIncorrectResponse:null,isLastTurn:NO},{guid:"turn-3-done",beforeText:"",responseTemplate:null,responseVerifier:null,afterText:"",nextTurnForNominalResponse:null,nextTurnForIncorrectResponse:null,isLastTurn:YES},{guid:"turn-4-start",beforeText:"<p>Click the <b>first</b> point in the graph that shows when and where Maria might have stopped to talk to her coach.</p>",responseTemplate:null,responseVerifier:"verifier-1",afterText:"",nextTurnForNominalResponse:"turn-4-correct",nextTurnForIncorrectResponse:"turn-4-hint-1",isLastTurn:NO},{guid:"turn-4-hint-1",beforeText:"<p>Click the first point in the graph that shows when and where Maria might have stopped to talk to her coach.</p>",responseTemplate:null,responseVerifier:"verifier-1",afterText:"<p>Incorrect.</p><p><b>Hint 1</b>: Look at the graph and table and find where Maria’s distance stayed the same.</p><p>Try again.</p>",nextTurnForNominalResponse:"turn-4-correct",nextTurnForIncorrectResponse:"turn-4-hint-2",isLastTurn:NO},{guid:"turn-4-hint-2",beforeText:"<p>Click the first point in the graph that shows when and where Maria might have stopped to talk to her coach.</p>",responseTemplate:null,responseVerifier:"verifier-1",afterText:"<p>Incorrect.</p><p><b>Hint 2</b>: In these two intervals, Maria’s distance changed as time passed.</p><p>Try again.</p><p><i>The 'running' intervals on the left and right will be each be connected by a line segment</i></p>",nextTurnForNominalResponse:"turn-4-correct",nextTurnForIncorrectResponse:"turn-4-hint-3",isLastTurn:NO},{guid:"turn-4-hint-3",beforeText:"<p>Click the first point in the graph that shows when and where Maria might have stopped to talk to her coach.</p>",responseTemplate:null,responseVerifier:"verifier-1",afterText:"<p>Incorrect.</p><p><b>Hint 3</b>: In this interval, Maria’s distance stayed the same as time passed.</p><p>Try again.</p><p><i>The points in the 'stopped' interval will be connected by a line segment</i></p>",nextTurnForNominalResponse:"turn-4-correct",nextTurnForIncorrectResponse:"turn-4-incorrect",isLastTurn:NO},{guid:"turn-4-incorrect",beforeText:"<i><p>If you look carefully, you'll see that between four and six minutes, Maria did not move.</p><p>Therefore we say she stopped at four minutes.</p></i>",responseTemplate:null,responseVerifier:null,afterText:"(Remember to click 'Next>>' to go to the next page.)",nextTurnForNominalResponse:null,nextTurnForIncorrectResponse:null,isLastTurn:YES},{guid:"turn-4-correct",beforeText:"<p>Correct! Four minutes into her run, Maria’s distance stayed the same compared to the next few minutes, meaning she stopped running.",responseTemplate:null,responseVerifer:null,afterText:"",nextTurnForNominalResponse:null,nextTurnForIncorrectResponse:null,isLastTurn:YES},{guid:"turn-5-start",beforeText:"<p>How many meters did Maria run before she stopped to talk to her coach?</p>",responseTemplate:"template-numeric-1",responseVerifier:"verifier-2",afterText:"",nextTurnForNominalResponse:"turn-5-correct",nextTurnForIncorrectResponse:"turn-5-hint-1",isLastTurn:NO},{guid:"turn-5-hint-1",beforeText:"<p>How many meters did Maria run before she stopped to talk to her coach?</p>",responseTemplate:"template-numeric-1",responseVerifier:"verifier-2",afterText:"<p>Incorrect.</p><p><b>Hint 1</b>: Look at the data and find how many minutes passed before Maria stopped.</p><p>Try again.</p>",nextTurnForNominalResponse:"turn-5-correct",nextTurnForIncorrectResponse:"turn-5-hint-2",isLastTurn:NO},{guid:"turn-5-hint-2",beforeText:"<p>How many meters did Maria run before she stopped to talk to her coach?</p>",responseTemplate:"template-numeric-1",responseVerifier:"verifier-2",afterText:"<p>Incorrect.</p><p><b>Hint 2</b>: Here is where Maria stopped. Find her distance at this point.</p><p>Try again.</p><p><i>The point at 4 minutes, 800 meters will be highlighted.</i></p>",nextTurnForNominalResponse:"turn-5-correct",nextTurnForIncorrectResponse:"turn-5-hint-3",isLastTurn:NO},{guid:"turn-5-hint-3",beforeText:"<p>How many meters did Maria run before she stopped to talk to her coach?</p>",responseTemplate:"template-numeric-1",responseVerifier:"verifier-2",afterText:"<p>Incorrect.</p><p><b>Hint 3</b>: Find Maria’s distance at any of these points.</p><p>Try again.</p><p><i>A horizontal line will be drawn from the 800 meter point on the y axis to the three 'stopped' data points.</i></p>",nextTurnForNominalResponse:"turn-5-correct",nextTurnForIncorrectResponse:"turn-5-incorrect",isLastTurn:NO},{guid:"turn-5-incorrect",beforeText:"<p>Remember from the last question that Maria stopped at four minutes. Use the graph to convince yourself that she had run 800 meters by that point.</p>",responseTemplate:null,responseVerifier:null,afterText:"",nextTurnForNominalResponse:null,nextTurnForIncorrectResponse:null,isLastTurn:YES},{guid:"turn-5-correct",beforeText:"<p>Correct! Four minutes into her run, Maria stopped. At that point, Maria’s distance was 800 meters.</p>",responseTemplate:null,responseVerifier:null,afterText:"",nextTurnForNominalResponse:null,nextTurnForIncorrectResponse:null,isLastTurn:YES},{guid:"turn-6-start",beforeText:"<p>For how many minutes did Maria stop to talk to her coach?</p>",responseTemplate:"template-numeric-1",responseVerifier:"verifier-3",afterText:"",nextTurnForNominalResponse:"turn-6-correct",nextTurnForIncorrectResponse:"turn-6-hint-1",isLastTurn:NO},{guid:"turn-6-hint-1",beforeText:"<p>For how many minutes did Maria stop to talk to her coach?</p>",responseTemplate:"template-numeric-1",responseVerifier:"verifier-3",afterText:"<p>Incorrect.</p><p><b>Hint 1</b>: Here is the interval when Maria’s distance stayed the same.</p><p>Try again.</p>",nextTurnForNominalResponse:"turn-6-correct",nextTurnForIncorrectResponse:"turn-6-hint-2",isLastTurn:NO},{guid:"turn-6-hint-2",beforeText:"<p>For how many minutes did Maria stop to talk to her coach?</p>",responseTemplate:"template-numeric-1",responseVerifier:"verifier-3",afterText:"<p>Incorrect.</p><p><b>Hint 2</b>: How much time elapsed during this interval?</p><p>Try again.</p>",nextTurnForNominalResponse:"turn-6-correct",nextTurnForIncorrectResponse:"turn-6-hint-3",isLastTurn:NO},{guid:"turn-6-hint-3",beforeText:"<p>For how many minutes did Maria stop to talk to her coach?</p>",responseTemplate:"template-numeric-1",responseVerifier:"verifier-3",afterText:"<p>Incorrect.</p><p><b>Hint 3</b>: Maria stopped between four and six minutes, so how many minutes passed?</p><p>Try again.</p>",nextTurnForNominalResponse:"turn-6-correct",nextTurnForIncorrectResponse:"turn-6-incorrect",isLastTurn:NO},{guid:"turn-6-incorrect",beforeText:"<p>Remember from the last question that Maria stopped at four minutes? Notice on the graph that see started moving again at six minutes.That means she stopped to talk for two minutes.</p>",responseTemplate:null,responseVerifier:null,afterText:"",nextTurnForNominalResponse:null,nextTurnForIncorrectResponse:null,isLastTurn:YES},{guid:"turn-6-correct",beforeText:"<p>Correct! Maria stopped during the horizontal segment of the graph. This is when her distance did not change. As you can see, this interval lasted 2 minutes.</p>",responseTemplate:null,responseVerifier:null,afterText:"",nextTurnForNominalResponse:null,nextTurnForIncorrectResponse:null,isLastTurn:YES}];
sc_require("models/guide_page");Smartgraphs.GuidePage.FIXTURES=[{guid:1,sequence:"sequence-1",index:1,title:"1",introText:"<p>On the ground, draw a straight line that is at least 4 meters long. Mark off each meter. This will be the path that you will follow as you experiment with different walking motions. Connect the GO!Motion sensor to your computer.</p><p>When you are ready, click Start to start recording the position and time data for your movements. Walk on the path for 10 seconds. Experiment with different kinds of motions (walking fast, slow, forward, backward…) Click Stop after 10 seconds is up.</p>",firstDialogTurn:"turn-1-start",dataSeries:"series-sensor",axes:"axes-sensor",sensorAppletShouldBeEnabled:YES},{guid:2,sequence:"sequence-1",index:1,title:"2",introText:"<p>Now you are going to try moving at two different speeds.</p><p>Start at the 0-meter mark. When you are ready, click Start and walk at a slow, steady pace for 5 seconds, then at a faster, steady pace for 5 seconds. Click Stop when the time is up.</p>",firstDialogTurn:"turn-2-start",dataSeries:"series-sensor",axes:"axes-sensor",sensorAppletShouldBeEnabled:YES},{guid:3,sequence:"sequence-1",index:1,title:"3",introText:"<p>This time, you are going to record your position and time during three different tasks.</p><p>Start at 0 meters again and click Start. Walk slowly for about 3 seconds, stop for 4 seconds, then walk faster for the remaining 3 seconds. Click Stop.</p>",firstDialogTurn:"turn-3-start",dataSeries:"series-sensor",axes:"axes-sensor",sensorAppletShouldBeEnabled:YES},{guid:4,sequence:"sequence-1",index:1,title:"4",introText:"<p>Maria ran practice laps around the school track. Her coach recorded the distances she ran after each minute (60 seconds).</p><p>These data are shown in the graph and the table at right.</p>",firstDialogTurn:"turn-4-start",dataSeries:"series-maria",axes:"axes-maria",sensorAppletShouldBeEnabled:NO},{guid:5,sequence:"sequence-1",index:1,title:"5",introText:"<p>Remember that the data on the right is the Maria's distance, recorded every minute (60 seconds) by her coach.<p>",firstDialogTurn:"turn-5-start",dataSeries:"series-maria",axes:"axes-maria",sensorAppletShouldBeEnabled:NO},{guid:6,sequence:"sequence-1",index:1,title:"6",introText:"<p>Remember that the data on the right is the Maria's distance, recorded every minute (60 seconds) by her coach.<p>",firstDialogTurn:"turn-6-start",dataSeries:"series-maria",axes:"axes-maria",sensorAppletShouldBeEnabled:NO}];
Smartgraphs.GuidePageSequence=SC.Record.extend({pages:SC.Record.toMany("Smartgraphs.GuidePage",{inverse:"sequence",orderBy:["index"]})});
sc_require("models/guide_page_sequence");Smartgraphs.GuidePageSequence.FIXTURES=[{guid:"sequence-1",pages:["1","2","3","4","5","6"]}];
Smartgraphs.ResponseTemplate=SC.Record.extend({templateString:SC.Record.attr(String),fieldTypes:SC.Record.attr(Array),fieldValues:SC.Record.attr(Array)});
sc_require("models/response_template");Smartgraphs.ResponseTemplate.FIXTURES=[{guid:"template-numeric-1",fieldTypes:"numeric".w(),fieldValues:[""],numberOfResponseFields:1},{guid:"template-open-1",fieldTypes:"textarea".w(),fieldValues:[""],numberOfResponseFields:1}];
Smartgraphs.ResponseVerifier=SC.Record.extend({verifierDelegateName:SC.Record.attr(String),configString:SC.Record.attr(String)});
sc_require("models/response_verifier");Smartgraphs.ResponseVerifier.FIXTURES=[{guid:"verifier-1",verifierDelegateName:"GraphSelection",configString:"x: 4"},{guid:"verifier-2",verifierDelegateName:"ResponseTemplate",configString:"number: 800"},{guid:"verifier-3",verifierDelegateName:"ResponseTemplate",configString:"number: 2"}];
Smartgraphs.StaticAnnotation=SC.Record.extend({list:SC.Record.toOne("Smartgraphs.StaticAnnotationList",{inverse:"annotations"}),type:SC.Record.attr(String),args:SC.Record.attr(String)});
Smartgraphs.StaticAnnotationList=SC.Record.extend({annotations:SC.Record.toMany("Smartgraphs.StaticAnnotation",{inverse:"list"})});
Smartgraphs.VerifierDelegate=SC.Object.extend({isVerifierDelegate:YES,configString:"",checkResponse:null,responseAsString:"",responseIsIncomplete:YES,responseIsMalformed:NO,responseIsCorrect:NO,responseIsReady:NO});
sc_require("verifier_delegates/verifier_delegate");Smartgraphs.GraphSelectionVerifierDelegate=Smartgraphs.VerifierDelegate.create({checkResponse:function(){if(this.get("responseIsIncomplete")){return
}if(this.get("responseIsMalformed")){return}var a;var b=this.get("configString");
if(b.indexOf("x:")===0){a=parseFloat(b.substring(2))}else{throw"GraphSelectionVerifierDelegate received a configString that didn't start with 'x:'"
}var d=this.get("selectedPoint");this.set("responseAsString","the point ("+d.get("x")+", "+d.get("y")+")");
this.set("responseIsMalformed",NO);var c=d.get("x");this.set("responseIsCorrect",c===a)
},graphSelectionBinding:SC.Binding.oneWay("Smartgraphs.dataSeriesController.selection"),responseIsReady:function(){var a=this.get("graphSelection");
return(!!a&&a.get("length")===1)}.property("graphSelection").cacheable(),responseIsIncomplete:function(){return !this.get("responseIsReady")
}.property("responseIsReady").cacheable(),responseIsMalformed:function(){var a=this.get("graphSelection");
return(a&&a.get("length")>1)}.property("graphSelection").cacheable(),selectedPoint:function(){var a=this.get("graphSelection");
return((a&&a.get("length")===1)?a.toArray().objectAt(0):undefined)}.property("graphSelection").cacheable()});
sc_require("verifier_delegates/verifier_delegate");Smartgraphs.ResponseTemplateVerifierDelegate=Smartgraphs.VerifierDelegate.create({checkResponse:function(){if(this.get("responseIsIncomplete")){return
}var b;var a=NO;var d=this.get("configString");if(d.indexOf("number:")===0){a=YES;
b=parseFloat(d.substring(7))}else{if(d.indexOf("string:"===0)){b=d.substring(7)}else{throw"ResponseTemplateVerifierDelegate received a configString that didn't start with 'number:' or 'string:'"
}}var c=this.get("response");this.set("responseAsString",c);this.set("responseIsMalformed",NO);
if(a){c=parseFloat(c);if(isNaN(c)){this.set("responseIsMalformed",YES)}}if(this.get("responseIsMalformed")){return
}this.set("responseIsCorrect",c===b)},responseArrayBinding:SC.Binding.oneWay("Smartgraphs.dialogTurnController.responseArray"),_oldResponseArray:null,responseArrayDidChange:function(){console.log("ResponseTemplateVerifierDelegate observed responseArray");
var a=this.get("responseArray");if(this._oldResponseArray){this._oldResponseArray.removeObserver("[]",this,this.rawResponseDidChange)
}if(a){a.addObserver("[]",this,this.rawResponseDidChange)}this._oldResponseArray=a;
this.rawResponseDidChange()}.observes("responseArray"),rawResponseDidChange:function(){console.log("Smartgraphs.ResponseTemplateVerifierDelegate rawResponseDidChange");
var b=this.get("responseArray");var a=(b&&b.get(length)>0)?b.objectAt(0):null;if(typeof a==="string"){a=a.strip()
}this.set("response",a)},responseIsReady:function(){var a=this.get("response");return(!!a&&(a.length>0))
}.property("response").cacheable(),responseIsIncomplete:function(){return !this.get("responseIsReady")
}.property("responseIsReady").cacheable()});Smartgraphs.AxesView=SC.View.extend({displayProperties:"axes.xMin axes.xMax axes.yMin axes.yMax axes.padding axes.xLabel axes.yLabel".w(),didCreateLayer:function(){this.$().css("zIndex","-1")
},render:function(d,g){var h=this.get("parentView");var f=h.get("raphaelObject");
var p=h.get("layout");var n=this.get("axes");if(!n){return}var q=n.get("xMin"),s=n.get("xMax"),a=n.get("yMin"),c=n.get("yMax"),j=n.get("padding"),o=n.get("xSteps"),r=n.get("ySteps"),b=n.get("xLabel"),i=n.get("yLabel");
if(f&&j&&p&&(q!==undefined)&&(s!==undefined)&&(a!==undefined)&&(c!==undefined)){var k=p.height,l=p.width;
var e=l-j.left-j.right;var m=k-j.top-j.bottom;if(this._x){this._x.remove()}this._x=f.g.axis(j.left,j.top+m,e,0,s,o,0);
if(this._y){this._y.remove()}this._y=f.g.axis(j.left,j.top+m,m,0,c,r,1);if(this._xLabel){this._xLabel.remove()
}this._xLabel=f.text(j.left+e/2,k-10,b).attr({font:"14px Arial, sans-serif"});if(this._yLabel){this._yLabel.remove()
}this._yLabel=f.text(10,j.top+m/2,i).attr({font:"14px Arial, sans-serif"}).rotate(270);
this.renderChildViews(d,g)}}});Smartgraphs.DialogTurnView=SC.View.extend({useStaticLayout:YES,childViews:"beforeTextView responseFieldsView afterTextView buttonsView".w(),beforeTextView:SC.StaticContentView.design({contentBinding:SC.Binding.oneWay("Smartgraphs.dialogTurnController.beforeText"),isVisibleBinding:SC.Binding.bool("Smartgraphs.dialogTurnController.beforeText")}),responseFieldsView:SC.StaticContentView.design({fieldTypesBinding:"Smartgraphs.responseTemplateController.fieldTypes",fieldValuesBinding:"Smartgraphs.responseTemplateController.fieldValues",fieldsTypesDidChange:function(){console.log("fieldTypesDidChange");
this.invokeOnce(this._updateChildViews)}.observes("fieldTypes"),fieldValuesDidChange:function(){console.log("fieldValuesDidChange");
this.invokeOnce(this._updateChildViews)}.observes("fieldValues"),_updateChildViews:function(){console.log("_updateChildViews");
this.removeAllChildren();this.contentLayoutDidChange();var c=this.get("fieldTypes");
var f=this.get("fieldValues");if(!c){return}var e,b,h,g;for(var a=0,d=c.get("length");
a<d;a++){e=c.objectAt(a);if(e==="textarea"){h=YES;g={height:110}}else{if(e==="numeric"){h=NO;
g={height:22,width:100}}else{throw"responseFieldsView received unexpected field type string '"+e+"'."
}}b=SC.View.design({useStaticLayout:YES,layout:g,childViews:[SC.TextFieldView.design({isTextArea:h,index:a,valueDidChange:function(){console.log("responseFieldsView's child textFieldView observed value");
var i=this.get("index");Smartgraphs.dialogTurnController.updateResponse(i,this.get("value"))
}.observes("value")})]});this.appendChild(b.create())}this.contentLayoutDidChange()
}}),afterTextView:SC.StaticContentView.design({contentBinding:SC.Binding.oneWay("Smartgraphs.dialogTurnController.afterText"),isVisibleBinding:SC.Binding.bool("Smartgraphs.dialogTurnController.afterText")}),buttonsView:SC.View.design({useStaticLayout:YES,layout:{height:24},childViews:"nextTurnButton".w(),nextTurnButton:SC.ButtonView.design({layout:{width:160,right:0},titleBinding:SC.Binding.oneWay("Smartgraphs.dialogTurnController.nextTurnButtonTitle"),isVisibleBinding:SC.Binding.oneWay("Smartgraphs.dialogTurnController.nextTurnButtonShouldBeVisible"),isEnabledBinding:SC.Binding.oneWay("Smartgraphs.dialogTurnController.nextTurnButtonShouldBeEnabled"),target:"Smartgraphs.dialogTurnController",action:"gotoNextTurn"})})});
Smartgraphs.EditableListItemView=SC.ListItemView.extend({inlineEditorShouldBeginEditing:function(){return YES
}});Smartgraphs.QuestionAuthorView=SC.View.extend({isVisible:NO,childViews:"titleLabel indexViewLabel indexView shortNameViewLabel shortNameView responseTypeViewLabel responseTypeView promptViewLabel promptView correctResponseViewLabel correctResponseView correctResponseFeedbackViewLabel correctResponseFeedbackView incorrectResponseFeedbackViewLabel incorrectResponseFeedbackView".w(),titleLabel:SC.LabelView.design({layout:{top:0,height:20,width:300},textAlign:"center",backgroundColor:"black",value:"Selected Question's Data:"}),indexViewLabel:SC.LabelView.design({layout:{top:20,height:20,width:300},backgroundColor:"grey",value:"Question#:"}),indexView:SC.LabelView.design({layout:{top:40,height:20,width:300},isEditable:NO,backgroundColor:"darkgrey",valueBinding:"*parentView.content.index"}),shortNameViewLabel:SC.LabelView.design({layout:{top:60,height:20,width:300},backgroundColor:"grey",value:"Short Name for navigation tabs:"}),shortNameView:SC.LabelView.design({layout:{top:80,height:20,width:300},isEditable:YES,backgroundColor:"darkblue",valueBinding:"*parentView.content.shortName"}),responseTypeViewLabel:SC.LabelView.design({layout:{top:100,height:20,width:300},backgroundColor:"grey",value:"Response Type:"}),responseTypeView:SC.LabelView.design({layout:{top:120,height:20,width:300},isEditable:YES,backgroundColor:"darkblue",valueBinding:"*parentView.content.responseType"}),promptViewLabel:SC.LabelView.design({layout:{top:140,height:20,width:300},backgroundColor:"grey",value:"Question Prompt:"}),promptView:SC.LabelView.design({layout:{top:160,height:80,width:300},isInlineEditorMultiline:YES,isEditable:YES,backgroundColor:"darkblue",valueBinding:"*parentView.content.prompt"}),correctResponseViewLabel:SC.LabelView.design({layout:{top:240,height:20,width:300},backgroundColor:"grey",value:"Correct Response:"}),correctResponseView:SC.LabelView.design({layout:{top:260,height:80,width:300},isInlineEditorMultiline:YES,isEditable:YES,backgroundColor:"darkblue",valueBinding:"*parentView.content.correctResponse"}),correctResponseFeedbackViewLabel:SC.LabelView.design({layout:{top:340,height:20,width:300},backgroundColor:"grey",value:"Correct Response Feedback:"}),correctResponseFeedbackView:SC.LabelView.design({layout:{top:360,height:80,width:300},isInlineEditorMultiline:YES,isEditable:YES,backgroundColor:"darkblue",valueBinding:"*parentView.content.correctResponseFeedback"}),incorrectResponseFeedbackViewLabel:SC.LabelView.design({layout:{top:440,height:20,width:300},backgroundColor:"grey",value:"Incorrect Response Feedback:"}),incorrectResponseFeedbackView:SC.LabelView.design({layout:{top:460,height:80,width:300},isInlineEditorMultiline:YES,isEditable:YES,backgroundColor:"darkblue",valueBinding:"*parentView.content.incorrectResponseFeedback"})});
Smartgraphs.RaphaelView=SC.View.extend({raphaelObject:null,_childViewForId:{},_lastViewForMouseMove:null,didCreateLayer:function(){var b=Raphael;
var c=this.get("frame");var a=b(this.get("layer"),c.width,c.height);a.canvas.raphael=a;
this.set("raphaelObject",a)},registerChildView:function(a,b){this._childViewForId[b]=a
},_ID_MATCHER:/^(sc\d+)/,_childViewForEvent:function(b){var c=b.target.id;var a=c.match(this._ID_MATCHER);
return a?this._childViewForId[a[1]]:null},mouseMoved:function(c){var b=this._childViewForEvent(c);
if(b&&b.mouseMoved){b.mouseMoved(c)}var a=this._lastViewForMouseMove;if(b!==a){if(a&&a.mouseExited){a.mouseExited(c)
}if(b&&b.mouseEntered){b.mouseEntered(c)}}this._lastViewForMouseMove=b},mouseDown:function(b){var a=this._childViewForEvent(b);
if(a){return a.mouseDown(b)}}});Smartgraphs.SeriesView=SC.View.extend({_raphaelObjForId:{},_dataPointForId:{},_highlightedPoint:null,NO_HIGHLIGHT_ATTR:{r:4},HIGHLIGHT_ATTR:{r:6},SELECTED_ATTR:{stroke:"#aa0000",fill:"#aa0000",opacity:0.8},NOT_SELECTED_ATTR:{stroke:"#BFADA7",fill:"#BFADA7",opacity:0.5},DATA_POINT_ID_MATCHER:"",id:"",init:function(){arguments.callee.base.apply(this,arguments);
this.id=SC.guidFor(this);this.DATA_POINT_ID_MATCHER=new RegExp(this.id+"-data-point-(\\d+)");
var a=this.get("parentView");a.registerChildView(this,this.id)},displayProperties:"xMin xMax yMin yMax padding selection content.[]".w(),didCreateLayer:function(){this.$().css("zIndex","-1")
},mouseDown:function(c){var d=this._dataPointForId[c.target.id];if(d){var a=this.get("controller");
var b=this.get("selection");if(b.contains(d)){a.deselectObject(d)}else{a.selectObject(d,NO)
}}},mouseEntered:function(b){var a=this._raphaelObjForId[b.target.id];if(a){a.attr(this.HIGHLIGHT_ATTR)
}this._highlightedPoint=a},mouseExited:function(b){var a=this._highlightedPoint;if(a){a.attr(this.NO_HIGHLIGHT_ATTR)
}this._highlightedPoint=null},render:function(d,g){var k=this.get("parentView");var B=k.$().children()[0];
var e=(B&&B.raphael)?B.raphael:null;var o=this.get("padding");var v=k.get("layout");
var w=this.get("xMin"),z=this.get("xMax"),a=this.get("yMin"),b=this.get("yMax");if(e&&o&&v&&(w!==undefined)&&(z!==undefined)&&(a!==undefined)&&(b!==undefined)){var p=v.height,r=v.width;
var f=r-o.left-o.right;var u=p-o.top-o.bottom;var D=f/z;var c=u/b;var A=this._raphaelObjForId;
for(var j in A){if(A.hasOwnProperty(j)){A[j].remove()}}this._raphaelObjForId={};this._dataPointForId={};
var m=this.get("content");var C=this.get("selection");for(var t=0,n=m.get("length");
t<n;t++){var q=m.objectAt(t);var l=o.left+(q.get("x")*D);var h=o.top+u-(q.get("y")*c);
var s=e.circle(l,h).attr(this.NO_HIGHLIGHT_ATTR);if(C.contains(q)){s.attr(this.SELECTED_ATTR)
}else{s.attr(this.NOT_SELECTED_ATTR)}s.node.id=this.id+"-data-point-%@".fmt(t);this._raphaelObjForId[s.node.id]=s;
this._dataPointForId[s.node.id]=q}}}});Smartgraphs.main=function main(){Smartgraphs.getPath("mainPage.mainPane").append();
var a=Smartgraphs.store.find(Smartgraphs.GuidePageSequence,"sequence-1");Smartgraphs.guidePageSequenceController.set("sequence",a)
};function main(){Smartgraphs.main()}sc_require("main");Smartgraphs.mainPage=SC.Page.design({mainPane:SC.MainPane.design({layout:{width:960,height:600},childViews:"dialogView graphView tableView sensorAppletView".w(),dialogView:SC.View.design({layout:{left:20,top:10,width:453,height:578},classNames:"smartgraph-pane".w(),childViews:"textView navButtons nextButton backButton".w(),textView:SC.View.design({layout:{top:20,left:20,right:20,bottom:80},classNames:"text-view".w(),childViews:"introTextView dialogTurnView".w(),introTextView:SC.StaticContentView.design({contentBinding:SC.Binding.oneWay("Smartgraphs.guidePageController.introText"),isVisibleBinding:SC.Binding.bool("Smartgraphs.guidePageController.introText")}),dialogTurnView:Smartgraphs.DialogTurnView.design({})}),navButtons:SC.SegmentedView.design({layout:{bottom:36,height:24},displayProperties:"nextPageIsSelectable".w(),itemsBinding:SC.Binding.oneWay("Smartgraphs.guidePageSequenceController"),itemTitleKey:"title",itemIsEnabledKey:"isSelectable",valueBinding:"Smartgraphs.guidePageSequenceController.selectedPage",nextPageIsSelectableBinding:SC.Binding.oneWay("Smartgraphs.guidePageSequenceController*nextPage.isSelectable")}),nextButton:SC.ButtonView.design({displayProperties:["isEnabled"],layout:{bottom:36,height:24,right:30,width:80},title:"Next >>",target:"Smartgraphs.guidePageSequenceController",action:"selectNextPage",isEnabledBinding:SC.Binding.oneWay("Smartgraphs.guidePageSequenceController.canSelectNextPage"),isVisibleBinding:SC.Binding.not("Smartgraphs.guidePageSequenceController.isLastPage").oneWay()}),backButton:SC.ButtonView.design({displayProperties:["isEnabled"],layout:{bottom:36,height:24,left:30,width:80},title:"<< Back",target:"Smartgraphs.guidePageSequenceController",action:"selectPreviousPage",isEnabledBinding:SC.Binding.oneWay("Smartgraphs.guidePageSequenceController.canSelectPreviousPage"),isVisibleBinding:SC.Binding.not("Smartgraphs.guidePageSequenceController.isFirstPage").oneWay()})}),graphView:Smartgraphs.RaphaelView.design({layout:{right:20,top:10,width:453,height:283},childViews:"axesView series1View".w(),classNames:["smartgraph-pane"],axesView:Smartgraphs.AxesView.design({axesBinding:"Smartgraphs.axesController"}),series1View:Smartgraphs.SeriesView.design({xMinBinding:"Smartgraphs.axesController.xMin",xMaxBinding:"Smartgraphs.axesController.xMax",yMinBinding:"Smartgraphs.axesController.yMin",yMaxBinding:"Smartgraphs.axesController.yMax",xScaleBinding:"Smartgraphs.axesController.xScale",yScaleBinding:"Smartgraphs.axesController.yScale",paddingBinding:"Smartgraphs.axesController.padding",controllerBinding:"Smartgraphs.dataSeriesController",contentBinding:"Smartgraphs.dataSeriesController.arrangedObjects",selectionBinding:"Smartgraphs.dataSeriesController.selection"})}),tableView:SC.View.design({layout:{right:285,bottom:10,width:188,height:283},classNames:["smartgraph-pane"],childViews:["labelsView","scrollerView"],labelsView:SC.View.design({layout:{left:0,top:0,width:190,height:30},childViews:["xsLabel","ysLabel"],xsLabel:SC.LabelView.design({layout:{left:10,width:80,top:7,height:20},valueBinding:SC.Binding.oneWay("Smartgraphs.axesController.xLabelAbbreviated")}),ysLabel:SC.LabelView.design({layout:{right:10,width:80,top:7,height:20},valueBinding:SC.Binding.oneWay("Smartgraphs.axesController.yLabelAbbreviated")})}),scrollerView:SC.ScrollView.design({layout:{left:0,top:30,width:190,bottom:15},borderStyle:SC.BORDER_NONE,contentView:SC.View.design({childViews:["xsView","ysView"],xHeightBinding:SC.Binding.from(".xsView.height").oneWay(),yHeightBinding:SC.Binding.from(".ysView.height").oneWay(),height:function(){return Math.max(this.get("xHeight"),this.get("yHeight"))
}.property("xHeight","yHeight").cacheable(),_heightDidChange:function(){this.adjust("height",this.get("height"))
}.observes("height"),xsView:SC.ListView.design({height:function(){var a=this.get("layout");
return this.get("calculatedHeight")+(a.top||0)+(a.bottom||0)}.property("calculatedHeight","layout").cacheable(),layout:{left:10,top:0,width:70},canEditContent:NO,contentValueKey:"x",contentBinding:"Smartgraphs.dataSeriesController.arrangedObjects",selectionBinding:"Smartgraphs.dataSeriesController.selection",rowHeight:18}),ysView:SC.ListView.design({height:function(){var a=this.get("layout");
return this.get("calculatedHeight")+(a.top||0)+(a.bottom||0)}.property("calculatedHeight","layout").cacheable(),layout:{left:100,top:0,width:70},canEditContent:NO,exampleView:Smartgraphs.EditableListItemView,contentValueKey:"y",contentBinding:"Smartgraphs.dataSeriesController.arrangedObjects",selectionBinding:"Smartgraphs.dataSeriesController.selection",rowHeight:18})})})}),sensorAppletView:SC.View.design({childViews:"sensorApplet startButton stopButton resetButton".w(),classNames:"smartgraph-pane".w(),layout:{right:20,bottom:10,width:253,height:283},shouldBeEnabledBinding:SC.Binding.oneWay("Smartgraphs.dialogTurnController.sensorAppletShouldBeEnabled"),_shouldBeEnabledWasTrue:null,_stopAppletIfNeeded:function(){var a=this.get("shouldBeEnabled");
if(!a&&this._shouldBeEnabledWasTrue){console.log("sensorAppletView.shouldBeEnabled became falsy; stopping applet");
this.get("sensorApplet").stop()}this._shouldBeEnabledWasTrue=a}.observes("shouldBeEnabled"),sensorApplet:CC.SensorAppletView.design({layout:{left:0,top:0,width:1,height:1},safariSensorStatePath:"Smartgraphs.mainPage.mainPane.sensorAppletView.sensorApplet.sensorState",hideButtons:YES,dt:0.1,resultsBinding:"Smartgraphs.dataSeriesController",listenerPath:"Smartgraphs.mainPage.mainPane.sensorAppletView.sensorApplet",dataReceived:function(f,h,b){if(!this.getPath("parentView.shouldBeEnabled")){console.log("dataReceived called, but sensorAppletView.isEnabled = false");
return}if(this.get("dataSeriesBeingUpdated")!==Smartgraphs.dataSeriesController.get("series")){console.log("dataReceived called, but sensorAppletView was updating a different series than the current series managed by the dataSeriesController")
}var e=this.getPath("results.content");var a=this.get("dt");var k=e.length();for(var c=0;
c<h;c++){var g=b[c];var j=(k*a)+((c+1)*a);var d=Smartgraphs.dataSeriesController.addDataPoint(j,g/10)
}},dataStreamEvent:function(b,a,c){},sensorsReady:function(){SC.RunLoop.begin();this.setPath("parentView.startButton.isEnabled",YES);
this.getPath("parentView.resetButton").action();SC.RunLoop.end()}}),startButton:SC.ButtonView.design({layout:{centerX:0,centerY:-60,height:24,width:160},isVisibleBinding:".parentView.shouldBeEnabled",isEnabled:NO,title:"Start",appletBinding:".parentView.sensorApplet",action:function(){this.set("isEnabled",NO);
this.setPath("parentView.stopButton.isEnabled",YES);this.setPath("parentView.resetButton.isEnabled",YES);
this.get("applet").start();this.set("dataSeriesBeingUpdated",Smartgraphs.dataSeriesController.get("series"))
}}),stopButton:SC.ButtonView.design({layout:{centerX:0,centerY:0,height:24,width:160},isVisibleBinding:".parentView.shouldBeEnabled",isEnabled:NO,title:"Stop",appletBinding:".parentView.sensorApplet",action:function(){this.set("isEnabled",NO);
this.get("applet").stop()}}),resetButton:SC.ButtonView.design({layout:{centerX:0,centerY:60,height:24,width:160},isVisibleBinding:".parentView.shouldBeEnabled",isEnabled:NO,title:"Reset",appletBinding:".parentView.sensorApplet",resultsBinding:"Smartgraphs.dataSeriesController",action:function(){this.set("isEnabled",NO);
this.setPath("parentView.stopButton.isEnabled",NO);this.setPath("parentView.startButton.isEnabled",YES);
this.get("applet").reset();var a=this.getPath("results.content");a.invoke("destroy");
Smartgraphs.store.commitRecords()}})})})});